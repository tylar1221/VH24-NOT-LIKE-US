<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Requests Data and NGO Map</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #ffffff;
            font-family: Arial, sans-serif;
            display: flex; /* Use flexbox for layout */
        }

        .requests-container {
            padding: 20px;
            max-width: 800px; /* Increased max width for requests */
            flex: 1; /* Allow the container to grow */
            margin: 100px 20px; /* Margin for spacing */
            background-color: #f9f9f9;
            color: #333;
            border-radius: 10px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        }

        .map-container {
            flex-grow: 1; /* Allow map to take the remaining space */
            margin-top: 100px; /* Align with requests container */
            padding-left: 20px; /* Add padding for spacing */
        }

        .map-container #map {
            height: 400px; /* Height for the map */
            margin-top: 20px; /* Top margin for spacing */
            border: 1px solid #ddd; /* Add border to the map for visibility */
        }

        h1 {
            text-align: center;
            margin-bottom: 20px;
        }

        .ngo-list {
            margin-top: 20px;
        }
    </style>
</head>

<body>

    <div class="requests-container"> <!-- Requests Data Container -->
        <h1>Requests Data</h1>
        <div style="display: flex; flex-wrap: wrap; gap: 20px;"> <!-- Card Container -->
            <% requests.forEach(function(request) { %>
                <div style="background: white; border: 1px solid #ddd; border-radius: 8px; padding: 15px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); flex: 1 1 250px; min-width: 250px;">
                    <h2 style="margin: 0 0 10px; font-size: 18px;"><%= request.org_name %></h2>
                    <p style="margin: 5px 0;"><strong>Category:</strong> <%= request.category %></p>
                    <p style="margin: 5px 0;"><strong>Item:</strong> <%= request.item %></p>
                    <p style="margin: 5px 0;"><strong>Description:</strong> <%= request.description %></p>
                    <p style="margin: 5px 0;"><strong>Quantity:</strong> <%= request.quantity %></p>
                    <p style="margin: 5px 0;"><strong>Cost:</strong> <%= request.cost %></p>
                    <button onclick="handlePay('<%= request.org_name %>')" style="background-color: #3498db; color: white; border: none; border-radius: 5px; padding: 10px; cursor: pointer; float: right;">Pay</button>
                </div>
            <% }); %>
        </div> <!-- End of Card Container -->
    </div> <!-- End of Requests Data Container -->

    <div class="map-container"> <!-- Map Container -->
        <h1>Select an NGO Near You</h1>
        <div id="map"></div>
        <button id="nextButton" class="btn btn-primary btn-block mt-4" disabled>Proceed to NGO Request</button>
    </div> <!-- End of Map Container -->

    <script>
        let selectedNGO = null;
    
        function initMap() {
            const map = new google.maps.Map(document.getElementById("map"), {
                zoom: 12,
                center: { lat: -34.397, lng: 150.644 }, // Default center
            });
        
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        const pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude,
                        };
        
                        map.setCenter(pos);
        
                        // Initialize the Places service
                        const service = new google.maps.places.PlacesService(map);
        
                        // Search for NGOs nearby
                        const request = {
                            location: pos,
                            radius: '5000', // Adjust radius
                            type: ['establishment'], // You can also use ['ngo'] if available
                            keyword: 'NGO' // Use keyword to filter results
                        };
        
                        service.nearbySearch(request, (results, status) => {
                            if (status === google.maps.places.PlacesServiceStatus.OK) {
                                results.forEach((place) => {
                                    // Create standard markers instead of AdvancedMarkerElement
                                    const marker = new google.maps.Marker({
                                        position: place.geometry.location,
                                        map: map,
                                        title: place.name,
                                    });
        
                                    // Add click event to select the NGO
                                    google.maps.event.addListener(marker, 'click', () => {
                                        selectedNGO = place; // Save the selected NGO
                                        document.getElementById("nextButton").disabled = false; // Enable the button
                                    });
                                });
                            } else {
                                console.error('Places Service failed:', status);
                            }
                        });
                    },
                    () => {
                        handleLocationError(true, map.getCenter());
                    }
                );
            } else {
                handleLocationError(false, map.getCenter());
            }
        }
        
    
        function handleLocationError(browserHasGeolocation, pos) {
            alert(
                browserHasGeolocation
                    ? "Error: The Geolocation service failed."
                    : "Error: Your browser doesn't support geolocation."
            );
        }
    
          function handlePay(ngoName) {
            // Save the NGO name to localStorage
            localStorage.setItem('selectedNGO', ngoName);
            // Redirect to shop-approve.html
            window.location.href = 'http://127.0.0.1:5501/VH24-NOT-LIKE-US-main/mongodb2/views/shop-approve.html';
        }  

        // Proceed to the next step (NGO request)
        document.getElementById("nextButton").addEventListener("click", function () {
            if (selectedNGO) {
                // Store selected NGO in localStorage and navigate to NGO request page
                localStorage.setItem("selectedNGO", JSON.stringify(selectedNGO));
                window.location.href = "http://127.0.0.1:5501/VH24-NOT-LIKE-US-main/mongodb2/views/shop-approve.html";
            }
        });
    </script>
    

    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBcfm6dAMCDP6q4mzXBNi4jBUbxi0GMFn4&libraries=places&callback=initMap"></script>


</body>

</html>
